# Generated by Django 2.2 on 2020-11-03 19:39

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('optype', models.CharField(max_length=20)),
                ('targetid', models.IntegerField()),
                ('fromuser', models.CharField(max_length=150)),
                ('fromnickname', models.CharField(max_length=20)),
                ('touser', models.CharField(max_length=150)),
                ('tonickname', models.CharField(max_length=20)),
                ('createtime', models.DateTimeField(default=django.utils.timezone.now)),
                ('content', models.CharField(blank=True, max_length=150, null=True)),
                ('read', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(max_length=20)),
                ('email', models.CharField(max_length=150)),
                ('sof', models.BooleanField()),
                ('storyid', models.IntegerField(blank=True, null=True)),
                ('fragid', models.IntegerField(blank=True, null=True)),
                ('content', models.CharField(max_length=150)),
                ('createtime', models.DateTimeField(default=django.utils.timezone.now)),
                ('likescount', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Fragment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('storyid', models.IntegerField()),
                ('nickname', models.CharField(max_length=20)),
                ('email', models.CharField(max_length=150)),
                ('content', models.CharField(max_length=500)),
                ('createtime', models.DateTimeField(default=django.utils.timezone.now)),
                ('likescount', models.IntegerField(default=0)),
                ('commentscount', models.IntegerField(default=0)),
                ('branchid', models.IntegerField(default=0)),
                ('branchleft', models.IntegerField(blank=True, null=True)),
                ('branchright', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Story',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ffid', models.IntegerField()),
                ('ffcontent', models.CharField(max_length=500)),
                ('nickname', models.CharField(max_length=20)),
                ('editor', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=150)),
                ('title', models.CharField(max_length=50)),
                ('createtime', models.DateTimeField(default=django.utils.timezone.now)),
                ('updatetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('remains', models.IntegerField(default=0)),
                ('branch', models.BooleanField(default=False)),
                ('finished', models.BooleanField(default=False)),
                ('lock', models.BooleanField(default=False)),
                ('modified', models.BooleanField(default=True)),
                ('likescount', models.IntegerField(default=0)),
                ('commentscount', models.IntegerField(default=0)),
                ('fragscount', models.IntegerField(default=1)),
                ('fragscountlimit', models.IntegerField(default=-1)),
                ('fragwordslimit', models.IntegerField(default=-1)),
                ('tags', models.CharField(blank=True, max_length=110, null=True)),
                ('keywords', models.CharField(blank=True, max_length=110, null=True)),
                ('rules', models.CharField(blank=True, max_length=310, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserExtension',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('nickname', models.CharField(max_length=20)),
                ('description', models.CharField(blank=True, max_length=150, null=True)),
                ('level', models.IntegerField(default=1)),
                ('experience', models.IntegerField(default=0)),
                ('avator', models.ImageField(blank=True, upload_to='')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
